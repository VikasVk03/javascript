Document Object Model (DOM Selector)
*****************************************************************
// Console in JavaScript
A web console serves as a tool for logging various information associated with a web page, including network requests, JavaScript outputs, security errors, CSS, etc. It facilitates interaction with a web page by enabling the execution of JavaScript expressions within the pageâ€™s content.

// What is a Console Object
In JavaScript, the console object provides access to the browser debugging console.

// console.log(window), type in browser console to get all the methods.

// JavaScript console.log() Method
The console.log() method in JavaScript logs messages or data to the console.
The console.log() method is useful for debugging or testing purposes.

#################################################################
ALL DOM Selector 

// refer: https://www.w3schools.com/js/js_htmldom.asp

** below operation perform on one.html in crome browser console
// to get whole tag
document.getElementById('title') // its a method() we can put parameter name which we want to get.

// dot laga kr alag alag element ko access kr sakte hi for example.
document.getElementById('title').id // id ki value kya hi mujhe batado, output: title

// get class name 
document.getElementById('title').class // output: undefined , it donot show class in this way.
document.getElementById('title').className // output: heading
reason: hum hamesa yaha class hi likh te hi, lekin jab apko document potray krta hi, behind the scene (apko dikhayeaga class bhi) document usko className hi samjta hi aur yese hi likha jata hi, DOM me structure banate samay usko className hi likh te hi.

// to get attribute
document.getElementById('title').getAttribute('id')   // output: 'title'
document.getElementById('title').getAttribute('class')  // output: 'heading'

// set attribute 
document.getElementById('title').setAttribute('class', 'test')  // output: undefined but it changes class value heading to test.
document.getElementById('title').setAttribute('class', 'test heading')  // output: undefined but it changes class value heading to both test & heading.

// we set above as variable
const title = document.getElementById('title')

// we style above using title variable
title.style.backgroundColor = 'green'
title.style.padding = '15px'
title.style.borderRadius = '15px'
note above is basic example we can also apply many other styles

// now we will learn to retrive  content
title.innerText        // output what ever visible on web page
title.textContent      // output all text, even if we have hide some text using style, it show all.
title.innerHTML        // output content with html tags.

// querySelector
document.querySelector('h1')   // we can give parameter as tag name or use css selector

document.querySelector('input[type="password"]') // output: input tag , we can use any other selector 

// we have three list item and we have change the color of firt item
document.querySelector('ul')
const myul = document.querySelector('ul')
myul.querySelector('li')
const myli = myul.querySelector('li')
myli.style.backgroundColor = 'green'
myli.style.padding = '15px'

// to change first li value
myli.innerText = 'five'
// we can easily manupulate dom if we understand how to select element and apply them.

// querySelectorAll()

document.querySelectorAll('li')
const temLiList = document.querySelectorAll('li')
temLiList[0].style.color = 'orange'   // it changes first li item to text orange.
// node list act as array but all array operation can not be performed... to access all operation type [] after nodeList name as above temLiList[]
// now we can change style any list item by using querySelectorAll

// change 3rd item color 
temLiList[2].style.backgroundColor = 'red' 

// changing heading 
const myH1 = document.querySelectorAll('h1')
myH1[0].style.backgroundColor = 'red'

// apply forEach loop on li
temLiList.forEach(function(l){
    l.style.backgroundColor = 'red' // all li item in red color
})

// HTML collection
document.getElementByClassName('list-item')  // outputs HTML collection
const myarr = document.getElementByClassName('list-item')
// to convert HTML collection in array
Array.from(myarr) // now we can apply all array property

